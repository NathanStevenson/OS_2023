python3 shell_test.py
Sanitizer output (main process) for test fork fails:
  ==773130==LeakSanitizer has encountered a fatal error.
  ==773130==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
  ==773130==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
Sanitizer output (main process) for test pipe in the end without a command is invalid:
  
  =================================================================
  ==773714==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 16 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test fork fails in a pipeline:
  ==773720==LeakSanitizer has encountered a fatal error.
  ==773720==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
  ==773720==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
Sanitizer output (main process) for test two command pipeline without arguments:
  
  =================================================================
  ==773721==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 19 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test two command pipeline without arguments, then use output:
  
  =================================================================
  ==773728==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 19 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test two command pipeline without arguments twice:
  
  =================================================================
  ==773738==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 38 byte(s) in 2 object(s) allocated from:
  [plus 8 more lines, not shown]


Failed test 'three command pipeline without arguments (outputs)'
Test input:
  test/example_out.sh | test/example_sed2.sh | test/example_sed.sh
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo XXX YYY
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 5 seconds
  in stdout: could not find match for pattern [.*foo XXX YYY] in []
  in stderr: unexpected extra output [['<error output not available>']]





Failed test 'three command pipeline without arguments (status codes)'
Test input:
  test/example_out.sh | test/example_sed2.sh | test/example_sed.sh
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*test/example_out.sh.*exit status:.*0.*
  .*test/example_sed2.sh.*exit status:.*0.*
  .*test/example_sed.sh.*exit status:.*0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 5 seconds
  in stdout: could not find match for pattern [.*test/example_out.sh.*exit status:.*0.*] in []
  in stderr: unexpected extra output [['<error output not available>']]





Failed test 'three command pipeline without arguments where order matters (1)'
Test input:
  test/example_out.sh | test/example_sed2.sh | test/example_sed3.sh
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo bar ZZZ
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 5 seconds
  in stdout: could not find match for pattern [.*foo bar ZZZ] in []
  in stderr: unexpected extra output [['<error output not available>']]





Failed test 'three command pipeline without arguments where order matters (2)'
Test input:
  test/example_out.sh | test/example_sed3.sh | test/example_sed2.sh
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo bar YYY
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 5 seconds
  in stdout: could not find match for pattern [.*foo bar YYY] in []
  in stderr: unexpected extra output [['<error output not available>']]



Sanitizer output (main process) for test |s without spaces mixed with | with spaces (output):
  
  =================================================================
  ==774055==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 32 byte(s) in 2 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test |s without spaces mixed with | with spaces (exit statuses):
  
  =================================================================
  ==774067==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 32 byte(s) in 2 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test simple pipe output:
  
  =================================================================
  ==774072==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 48 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test simple pipe exit status:
  
  =================================================================
  ==774078==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 48 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]


Failed test 'longer pipeline (output)'
Test input:
  /bin/echo testing one two three | /bin/sed -e s/one/XXX/ | /bin/sed -e s/two/YYY/
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*testing XXX YYY three
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 5 seconds
  in stdout: could not find match for pattern [.*testing XXX YYY three] in []
  in stderr: unexpected extra output [['<error output not available>']]





Failed test 'longer pipeline exit status (all 0s)'
Test input:
  /bin/echo testing one two three | /bin/sed -e s/one/xxx/ | /bin/sed -e s/two/yyy/
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*exit status: 0.*
  .*exit status: 0.*
  .*exit status: 0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 5 seconds
  in stdout: could not find match for pattern [.*exit status: 0.*] in []
  in stderr: unexpected extra output [['<error output not available>']]



Sanitizer output (main process) for test pipeline with two exit status 1s and one 0 has 1s:
  
  =================================================================
  ==774228==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 64 byte(s) in 2 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test pipeline with two exit status 1s and one 0 has 0:
  
  =================================================================
  ==774237==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 72 byte(s) in 2 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test 100 pipelines (with limit of 50 open files):
  
  =================================================================
  ==774243==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 3200 byte(s) in 100 object(s) allocated from:
  [plus 8 more lines, not shown]


Failed test 'redirect from operator is invalid'
Test input:
  /bin/false < | 
  exit
Actual stdout:
  > > /bin/false exit status: 0
  > 
Actual stderr:
  invalid command
Expected stdout regular expression pattern: (extra lines allowed)
  > (?:> |/bin/false.*exit status: 255|/bin/false(?!.*exit status:)\s*:)
Expected stderr regular expression pattern: (extra lines allowed)
  .*invalid command.*
Errors:
  in stdout: could not find match for pattern [> (?:> |/bin/false.*exit status: 255|/bin/false(?!.*exit status:)\s*:)] in ['> > /bin/false exit status: 0', '> ']





Failed test 'large amount of data through pipe'
Test input:
  /bin/head -c 1048576 /dev/zero | /bin/cat | /usr/bin/wc -c
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*1048576.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 30 seconds
  in stdout: could not find match for pattern [.*1048576.*] in []
  in stderr: unexpected extra output [['<error output not available>']]



Sanitizer output (main process) for test pipe with redirect at end:
  
  =================================================================
  ==774868==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 19 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test pipe with redirect at beginning:
  
  =================================================================
  ==774879==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 16 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
Sanitizer output (main process) for test pipe with redirect at beginning and end:
  
  =================================================================
  ==774885==ERROR: LeakSanitizer: detected memory leaks
  
  Direct leak of 16 byte(s) in 1 object(s) allocated from:
  [plus 8 more lines, not shown]
80 tests passed and 8 tests failed.
---
Note on interpreting test output patterns:
All expected values matched against a "regular expression" where:
    .* means any string (including empty strings)
    .+ means any string (excluding empty strings)
    everything is matched case-insensitively

